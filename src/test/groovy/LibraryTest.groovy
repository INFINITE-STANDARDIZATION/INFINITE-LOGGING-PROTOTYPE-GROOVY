package groovy
/*
 * This Spock specification was generated by the Gradle 'init' task.
 */

import groovy.util.logging.Log
import org.codehaus.groovy.ast.AnnotationNode
import org.codehaus.groovy.ast.stmt.Statement
import spock.lang.Specification

@Log
class LibraryTest extends Specification {


    def "someLibraryMethod returns true"() {
        setup:
        def lib = new Library()

        when:
        def result = lib.someLibraryMethod()

        then:
        result == true

    }

    //@BlackBox(blackBoxLevel = BlackBoxLevel.METHOD)
    def test() {
        setup:
        Statement statement = BlackBoxEngine.text2statement("""package groovy

class Executable implements Runnable{


    @Override
    void run() {
        System.out.println("blackBoxConfFileName: " + System.getProperty("blackBoxConfFileName"))
        someMethod2()
    }

    //@BlackBox(blackBoxLevel = BlackBoxLevel.EXPRESSION)
    @BlackBox(blackBoxLevel = BlackBoxLevel.STATEMENT)
    void someMethod2() {
        for (i in [0,1]) {
            System.out.println("zzzzzzzzzz " + i)
        }
        //1/0
        //BlackBoxEngine.getInstance().executionClose()
    }

}
""")
        statement.visit(new BlackBoxVisitor(BlackBoxLevel.EXPRESSION, new AnnotationNode()))
        System.out.println(BlackBoxEngine.codeString(statement))

        when:
        statement != null

        then:
        true

    }
}
